{
  "hash": "b75b4e5d66f47345ad7298cfac754e43",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"likert 패키지 소개\"\ndescription: |\n  문항별 만족/불만족을 한번에 표현하는 likert chart를 그려보자\ncategories: \n  - R\n  - rpackage\n  - shiny\n  - plotly\n  - quarto\naliases: \n  - likert\nauthor: \n  - name: \"Jinhwan Kim\"\n    url: https://github.com/jhk0530\nimage: img/logo.png\ndate: 02-05-2023\nformat: html\nexecute: \n  freeze: true\ndraft: false\nlicense: CC BY-NC\n---\n\n\n# 리커트 척도\n\n사용자로 부터 수집되는 데이터중 많은 부분은 설문조사를 통해 얻을 수 있으며, **제시된 문장에 얼마나 동의하는지**의 단계를 나타내는 표현하는 방법으로 [리커트 척도](https://en.wikipedia.org/wiki/Likert_scale) 라는 방법이 쓰이기도 합니다. \n\n하나의 예시를 들면 다음과 같습니다.\n\n<hr>\n\n```{=html}\n<fieldset>\n  <h5>이 아티클은 읽기 쉬운 내용으로 쓰여져 있다.</h5>\n\n  <div>\n  <input type=\"radio\" id=\"huey\" name=\"drone\" value=\"huey\" checked>\n  <label for=\"huey\">매우 그렇다</label>\n  </div>\n\n  <div>\n  <input type=\"radio\" id=\"dewey\" name=\"drone\" value=\"dewey\">\n  <label for=\"dewey\">그런 편이다</label>\n  </div>\n  \n  <div>\n  <input type=\"radio\" id=\"dewey\" name=\"drone\" value=\"dewey\">\n  <label for=\"dewey\">보통이다</label>\n  </div>\n  \n  <div>\n  <input type=\"radio\" id=\"dewey\" name=\"drone\" value=\"dewey\">\n  <label for=\"dewey\">그렇지 않다</label>\n  </div>\n  \n  <div>\n  <input type=\"radio\" id=\"louie\" name=\"drone\" value=\"louie\">\n  <label for=\"louie\">전혀 그렇지 않다</label>\n  </div>\n</fieldset>\n```\n\n\n<br/>\n\n이 설문을 10명에게 진행했고, 그 결과가 다음 테이블과 같다고 가정해보겠습니다.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: xtable\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n\n|     |읽기쉬움         |\n|:----|:----------------|\n|id1  |그런 편이다      |\n|id2  |보통이다         |\n|id3  |매우 그렇다      |\n|id4  |보통이다         |\n|id5  |전혀 그렇지 않다 |\n|id6  |그렇지 않다      |\n|id7  |그런 편이다      |\n|id8  |그런 편이다      |\n|id9  |그렇지 않다      |\n|id10 |전혀 그렇지 않다 |\n\n\n:::\n:::\n\n\n이렇게 **순서가 있는, 여러 카테고리의 데이터**를 어떻게 시각화 할 수 있을까요? (Likert 외에도 [NPS](https://en.wikipedia.org/wiki/Net_promoter_score)도 해당합니다.)\n\n## Barplot\n\n제일 먼저 해볼 수 있는 것은, 문항별로 개수를 보여주는 것입니다.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n이 방법 자체는 나쁘지는 않지만, 1개가 아닌 여러개 문항의 결과를 보여줘야 한다면 아쉬운 문제점이 생깁니다. \n\n## Stacked Bar plot\n\n다음과 같이 데이터를 세줄 더 추가해보겠습니다. \n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|     |읽기쉬움         |도움이됨         |따라하기쉬움     |\n|:----|:----------------|:----------------|:----------------|\n|id1  |그런 편이다      |전혀 그렇지 않다 |그런 편이다      |\n|id2  |보통이다         |전혀 그렇지 않다 |그렇지 않다      |\n|id3  |매우 그렇다      |그런 편이다      |그렇지 않다      |\n|id4  |보통이다         |보통이다         |그런 편이다      |\n|id5  |전혀 그렇지 않다 |매우 그렇다      |그렇지 않다      |\n|id6  |그렇지 않다      |전혀 그렇지 않다 |그런 편이다      |\n|id7  |그런 편이다      |그렇지 않다      |보통이다         |\n|id8  |그런 편이다      |그렇지 않다      |그렇지 않다      |\n|id9  |그렇지 않다      |그렇지 않다      |그런 편이다      |\n|id10 |전혀 그렇지 않다 |전혀 그렇지 않다 |전혀 그렇지 않다 |\n\n\n:::\n:::\n\n\n이 여러개의 데이터를 표기 하는 방법은 문항을 하나의 축 (x)에, 그리고 문항의 결과들을 나머지 축(y)을 활용하여 그려야 하기 때문에 \"stacked bar\"를 활용하는 방법이 있습니다.\n\n<img src='img/stacked_bar_graph.png' width = 500 align>\n\n*Image from [The Data Visualisation Catalogue](https://datavizcatalogue.com/methods/stacked_bar_graph.html)*\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n문항별로 응답자 수는 같기 때문에 (`NA`는 고려하지 않습니다) 전부 높이가 동일한 결과가 나오게 됩니다.\n\n그런데 주의해야할 점으로는, 당연하게도 문항에 따라 분포가 다를 수 있습니다. \"한쪽으로 몰리는\" 답이 나오는 경우가 있을 수 있다는 의미입니다.\n\n위의 그림에서 보통이다는 동일하게 각각 1개씩 답변이 있음에도 불구하고 `도움이됨`의 위치는 높게 되어있어 시각적 비교에 혼선을 줄 수 있습니다.\n\n이를 위해서 아래 이미지처럼 Neutral(회색)의 위치를 고정시키고, 이를 기준으로 위 아래로 Positive / Negative를 붙여 표현하는 방법을 고려할 수 있습니다.\n\n<img src='img/diverging-bar-neutral-split.png' width = 500>\n\n*Image from [daydreamingnumbers](http://daydreamingnumbers.com/blog/4-ways-to-visualize-likert-scales/)*\n\n이러한 차트의 정확한 이름은 모르겠지만, 이 글에서는 편의상 **Likert chart**라 표현하겠습니다.\n\n# Likert chart with R\n\n이번 글에서 소개할 패키지는 이 Likert chart를 그릴 수 있게 하는 패키지 입니다.\n\n<img src='img/hex.png' width = '150'>\n\n<https://github.com/jbryer/likert>\n\n## 예시 데이터\n\n시각화 패키지의 특성상 사용자의 데이터의 형태와 패키지가 요구하는 형태가 다를 수 있어,  likert 패키지에서는 활용할 수 있는 예시데이터를 제공합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.package('likert')\nlibrary(likert)\ndata(pisaitems)\nhead(pisaitems[,1:3])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         CNT           ST24Q01           ST24Q02\n68038 Canada          Disagree    Strongly agree\n68039 Canada             Agree Strongly disagree\n68040 Canada    Strongly agree Strongly disagree\n68041 Canada          Disagree          Disagree\n68042 Canada Strongly disagree          Disagree\n68043 Canada             Agree Strongly disagree\n```\n\n\n:::\n\n```{.r .cell-code}\n# str(pisaitems)\n# View(pisaitems)\n```\n:::\n\n\n`pisaitems` 데이터의 경우, \n- rownames를 가지고 있으며\n- 첫 `CNT` 이후로는 전부 scale을 갖는 **factor**의 형태로 이루어져 있습니다.\n- 개수는 각 column 마다 다르며, **NA**를 포함하고 있기도 합니다. (ex: `ST36Q01`)\n\n이후 이 데이터를 `likert` 오브젝트로 변환해야 합니다.\n다만 모든 데이터를 다 사용하진 않고, `CNT` 이후의 처음 3개만 사용하겠습니다. \n\n## likert: print\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(pisaitems[, 2:4])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              ST24Q01                   ST24Q02                   ST24Q03     \n Strongly disagree:14947   Strongly disagree:13323   Strongly disagree:13900  \n Disagree         :23515   Disagree         :23811   Disagree         :22072  \n Agree            :20000   Agree            :20935   Agree            :23525  \n Strongly agree   : 7029   Strongly agree   : 7487   Strongly agree   : 5917  \n NA's             : 1199   NA's             : 1134   NA's             : 1276  \n```\n\n\n:::\n\n```{.r .cell-code}\n100 * 14947 / (14947 + 23515 + 20000 + 7029) # ST24Q01: Strongly disagree \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 22.82298\n```\n\n\n:::\n\n```{.r .cell-code}\nll <- likert(pisaitems[, 2:4])\nprint(ll)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Item Strongly disagree Disagree    Agree Strongly agree\n1 ST24Q01          22.82298 35.90570 30.53855      10.732772\n2 ST24Q02          20.32308 36.32162 31.93453      11.420770\n3 ST24Q03          21.24927 33.74201 35.96325       9.045464\n```\n\n\n:::\n:::\n\n\n위의 `summary`와 바로 비교해보면 알 수 있듯, `likert` 를 출력했을때는 `NA`를 제외한 각 문항별 factor의 백분율을 출력합니다.\n\n## likert: summary\n\n한편 `summary` 함수를 사용하면 low와 high를 표기해주는데 이는 각각 Neutral보다 낮은 / 높은 값의 백분율 합을 표기합니다. (예시의 경우 `Strongly disagree` + `Disagree`, `Strongly agree` + `agree`) \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ll)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Item      low neutral     high     mean        sd\n3 ST24Q03 54.99129       0 45.00871 2.328049 0.9090326\n2 ST24Q02 56.64470       0 43.35530 2.344530 0.9277495\n1 ST24Q01 58.72868       0 41.27132 2.291811 0.9369023\n```\n\n\n:::\n\n```{.r .cell-code}\n22.82298 + 35.90570 # ST24Q01's Low\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 58.72868\n```\n\n\n:::\n:::\n\n\n- 물론 문항이 4-5개가 아닌, 여러개도 가능하기 때문에 Neutral은 가운데를 기준으로 설정하지만, 사용자가 `center`를 통해 지정할 수도 있습니다.\n- `mean`과 `sd`는 크게 신경쓰지 않아도 괜찮습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ll, center = 1.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Item      low neutral     high     mean        sd\n2 ST24Q02 20.32308       0 79.67692 2.344530 0.9277495\n3 ST24Q03 21.24927       0 78.75073 2.328049 0.9090326\n1 ST24Q01 22.82298       0 77.17702 2.291811 0.9369023\n```\n\n\n:::\n:::\n\n\n## liert: Plot\n\n`likert` object는 그냥 `plot`에 넣는 것으로도 결과를 바로 만들어 낼 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ll)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n기본 `center`는 가운데, 이 경우 `2`와 `3`사이인 `2.5`를 기준으로 그려지고, 문항별 `High`, `Low`를 차트 양옆에 추가로 표기하게 됩니다.\n\n### information\n\n차트에서의 factor 별 %, high, low 는 plot.percents, plot.percent.low, plot.percent.high를 통해 설정할 수 있습니다.\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ll, plot.percents = TRUE, plot.percent.low = FALSE, plot.percent.high = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### colors\n\n기본 색상외에 `colors`를 사용하여 색상을 커스텀 할 수 있습니다. 단, 개수는 factor의 수와 동일해야합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ll, colors=c('orange','darkorange','darkblue','blue'))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### center\n\n만약 위의 summary 처럼 Neutral을 바꾸고 싶다면, `center`를 통해 값을 지정하여 그릴 수 있습니다.\n\n여기서 `center`가 정수라면 해당하는 factor의 색상이 자동으로 회색으로 바뀌는 것을 확인 할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ll, center = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### include.center\n\n차트에서 Neutral을 제외하고 그리고 싶다면 `include.center = FALSE`를 사용하여 제거할 수 있습니다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ll, center = 2, include.center = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### centered\n\n단순히 stacked bar chart를 그리고 싶다면 `centered = FALSE`를 사용하면 됩니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ll, centered = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### NA info (histogram)\n\n문항에서 결측치 (`NA`) 정보를 같이 표현하고 싶은 경우, `include.histogram = TRUE`를 설정하여 그릴 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(pisaitems[,2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nStrongly disagree          Disagree             Agree    Strongly agree \n            14947             23515             20000              7029 \n             NA's \n             1199 \n```\n\n\n:::\n\n```{.r .cell-code}\n100 * 1199 / 66690 # 1.79% NA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.797871\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(ll, include.histogram = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### density plot\n\n`likert` 오브젝트는 `type = 'density'`를 사용하여  bar chart의 형태가 아닌 density plot으로도 표현할 수 있습니다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ll, type = 'density')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n여러개의 density plot을 `facet`을 사용하여 하나로 겹치게 보여줄 수 있으며, 추가로 legend를 지정하는 예시입니다.\n(*구분은 잘 안가지만, fill의 색상은 미세하게 다르게 표현되어 있습니다*)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ll, type='density', facet=FALSE) + \n  guides(\n    color = guide_legend(title=\"Legend with Color\"),\n    fill = guide_legend(title=\"Legend with Fill\")\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n### Heat map\n\n`likert` 오브젝트는 `type = 'heat'`를 사용해 heatmap으로 도 표현할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ll, type='heat')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n## Group Likert\n\n한편 `likert` 오브젝트를 만들때, 사용자의 그룹을 설정해준다면 (예시데이터의 `CNT`와 같이)\ndplyr의 `group by`를 사용한 것과 유사한 결과를 낼 수 있습니다. \n\n사용 가능한 parameter는 위와 동일합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nllg <- likert(pisaitems[,2:4], grouping=pisaitems$CNT)\nprint(llg) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Group    Item Strongly disagree Disagree    Agree Strongly agree\n1        Canada ST24Q01          25.69810 35.12856 24.88383      14.289507\n2        Canada ST24Q02          26.77758 35.18871 24.63608      13.397637\n3        Canada ST24Q03          25.22917 31.68150 33.47062       9.618706\n4        Mexico ST24Q01          21.87500 36.76845 33.45526       7.901293\n5        Mexico ST24Q02          15.26451 36.42523 37.79077      10.519491\n6        Mexico ST24Q03          18.44410 34.78607 37.89150       8.878331\n7 United States ST24Q01          17.16996 33.00426 33.97213      15.853659\n8 United States ST24Q02          29.08282 40.51858 21.03328       9.365325\n9 United States ST24Q03          24.31646 35.13671 32.79038       7.756448\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(llg, group.order=c('Mexico', 'Canada', 'United States'))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### Group horizontal Plot\n\n그룹을 사용하면 차트를 여러개의 그룹에 따라 구분지어 그려야 하는 만큼 `ggplot`의 `facet`처럼 차트를 나누어야 하는데, 이 과정에서 위아래가 아닌, 좌우로도 설정 할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(llg, panel.arrange='h', wrap=20)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n# Likert chart with Shiny\n\nlikert는 이 아티클의 예시와 같은 1회성 코드, 혹은 이를 작성한 `quarto`와 같은 문서에서도 활용할 수 있지만 `shiny`를 통해서 다른 사람들에게 웹으로 공유할 수 있습니다.\n\n\n::: {.cell}\n\n:::\n\n\n단, `shinyapps.io`를 활용하여 배포 하지 않고서는 `quarto` 아티클에 shiny를 심는 것은 기술적으로 불가능 하기 때문에 shiny는 코드와 결과 이미지를 활용합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\nlibrary(likert)\n\nui <- fluidPage(\n  h2('shiny with Likert'),\n  hr(),\n  plotOutput(outputId = 'myLikert')\n)\n\nserver <- function(input, output, session) {\n  \n  data(pisaitems)\n  ll <- likert(pisaitems[, 2:4])\n  output$myLikert = renderPlot({\n    plot(ll)\n  })\n}\n\nshinyApp(ui, server)\n```\n:::\n\n\n위 코드를 사용한 shiny app의 결과는 다음과 같습니다.\n\n<img src='img/shiny.png' width = 500>\n\n# Likert chart with ggplotly\n\n`ggplotly`는 ggplot과 같은 R에서 그린 그림을 `plotly` 패키지와 연동하여, 이미지를 정적인 이미지에서 동적인 이미지로 바꾸는 역할을 하는 함수입니다.\n이를 통해 hover, download, zoom 등의 액션을 사용자가 추가로 할 수 있어 shiny나 rmarkdown 등의 interactive document에서는 종종 활용하기도 합니다.\n\n`likert` 패키지 또한 마찬가지로 `ggplotly`를 통해서 정적인 이미지를 동적으로 바꿔줄 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\n\nggplotly(plot(ll))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-22acb44c85a2a9c528d4\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-22acb44c85a2a9c528d4\">{\"x\":{\"data\":[{\"x\":[0,0],\"y\":[0.40000000000000002,3.6000000000000001],\"text\":\"yintercept: 0\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"h\",\"width\":[0.90000000000000036,0.90000000000000013,0.89999999999999991],\"base\":[-54.991286268994408,-56.644700713893464,-58.728680276679242],\"x\":[21.249273855749536,20.323082555372508,22.822983310683917],\"y\":[3,2,1],\"text\":[\"Item: ST24Q03<br />value: 21.24927<br />Item: ST24Q03<br />variable: Strongly disagree\",\"Item: ST24Q02<br />value: 20.32308<br />Item: ST24Q02<br />variable: Strongly disagree\",\"Item: ST24Q01<br />value: 22.82298<br />Item: ST24Q01<br />variable: Strongly disagree\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(216,179,101,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Strongly disagree\",\"legendgroup\":\"Strongly disagree\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"h\",\"width\":[0.90000000000000036,0.90000000000000013,0.89999999999999991],\"base\":[-33.742012413244872,-36.321618158520955,-35.905696965995325],\"x\":[33.742012413244872,36.321618158520955,35.905696965995325],\"y\":[3,2,1],\"text\":[\"Item: ST24Q03<br />value: 33.74201<br />Item: ST24Q03<br />variable: Disagree\",\"Item: ST24Q02<br />value: 36.32162<br />Item: ST24Q02<br />variable: Disagree\",\"Item: ST24Q01<br />value: 35.90570<br />Item: ST24Q01<br />variable: Disagree\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(235,217,178,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Disagree\",\"legendgroup\":\"Disagree\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"h\",\"width\":[0.89999999999999991,0.90000000000000013,0.90000000000000036],\"base\":[0,0,0],\"x\":[30.538547281305828,31.93452925742876,35.963249457302723],\"y\":[1,2,3],\"text\":[\"Item: ST24Q01<br />value: 30.538547<br />Item: ST24Q01<br />variable: Agree\",\"Item: ST24Q02<br />value: 31.934529<br />Item: ST24Q02<br />variable: Agree\",\"Item: ST24Q03<br />value: 35.963249<br />Item: ST24Q03<br />variable: Agree\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(172,217,213,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Agree\",\"legendgroup\":\"Agree\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"h\",\"width\":[0.89999999999999991,0.90000000000000013,0.90000000000000036],\"base\":[30.538547281305828,31.93452925742876,35.963249457302723],\"x\":[10.73277244201493,11.420770028677769,9.0454642737028763],\"y\":[1,2,3],\"text\":[\"Item: ST24Q01<br />value: 10.732772<br />Item: ST24Q01<br />variable: Strongly agree\",\"Item: ST24Q02<br />value: 11.420770<br />Item: ST24Q02<br />variable: Strongly agree\",\"Item: ST24Q03<br />value:  9.045464<br />Item: ST24Q03<br />variable: Strongly agree\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(90,180,172,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Strongly agree\",\"legendgroup\":\"Strongly agree\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[-100,-100,-100],\"y\":[3,2,1],\"text\":[\"55%\",\"57%\",\"59%\"],\"hovertext\":[\"Item: ST24Q03<br />value: -100<br />Item: ST24Q03<br />paste0(round(low), \\\"%\\\"): 55%\",\"Item: ST24Q02<br />value: -100<br />Item: ST24Q02<br />paste0(round(low), \\\"%\\\"): 57%\",\"Item: ST24Q01<br />value: -100<br />Item: ST24Q01<br />paste0(round(low), \\\"%\\\"): 59%\"],\"textfont\":{\"size\":11.338582677165356,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[100,100,100],\"y\":[3,2,1],\"text\":[\"45%\",\"43%\",\"41%\"],\"hovertext\":[\"Item: ST24Q03<br />value: 100<br />Item: ST24Q03<br />paste0(round(high), \\\"%\\\"): 45%\",\"Item: ST24Q02<br />value: 100<br />Item: ST24Q02<br />paste0(round(high), \\\"%\\\"): 43%\",\"Item: ST24Q01<br />value: 100<br />Item: ST24Q01<br />paste0(round(high), \\\"%\\\"): 41%\"],\"textfont\":{\"size\":11.338582677165356,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283108,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":51.872146118721474},\"plot_bgcolor\":\"transparent\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"NanumGothic\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-115.5,115.5],\"tickmode\":\"array\",\"ticktext\":[100,50,0,50,100],\"tickvals\":[-100,-50,0,50,100],\"categoryorder\":\"array\",\"categoryarray\":[100,50,0,50,100],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"NanumGothic\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Percentage\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"NanumGothic\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,3.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"ST24Q01\",\"ST24Q02\",\"ST24Q03\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"ST24Q01\",\"ST24Q02\",\"ST24Q03\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"NanumGothic\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"NanumGothic\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"NanumGothic\",\"size\":11.68949771689498},\"title\":{\"text\":\"Response\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"NanumGothic\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"184235b9a7c2f\":{\"yintercept\":{},\"type\":\"scatter\"},\"184237b4f20a4\":{\"x\":{},\"y\":{},\"fill\":{}},\"184237e82e3b\":{\"x\":{},\"y\":{},\"fill\":{}},\"184231c33278b\":{\"x\":{},\"y\":{},\"label\":{}},\"1842362692523\":{\"x\":{},\"y\":{},\"label\":{}}},\"cur_data\":\"184235b9a7c2f\",\"visdat\":{\"184235b9a7c2f\":[\"function (y) \",\"x\"],\"184237b4f20a4\":[\"function (y) \",\"x\"],\"184237e82e3b\":[\"function (y) \",\"x\"],\"184231c33278b\":[\"function (y) \",\"x\"],\"1842362692523\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nggplotly는 shiny로도 동시에 연동이 가능합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nui <- fluidPage(\n  h2('shiny with Likert'),\n  hr(),\n  plotOutput(outputId = 'myLikert'),\n  h3(\"with ggplotly\"),\n  plotlyOutput(outputId = 'myLikert2')\n)\n\nserver <- function(input, output, session) {\n  \n  data(pisaitems)\n  ll <- likert(pisaitems[, 2:4])\n  output$myLikert = renderPlot({\n    plot(ll)\n  })\n  \n  output$myLikert2 = renderPlotly({\n    ggplotly(\n      plot(ll)\n    )\n  })\n}\n\nshinyApp(ui, server)\n```\n:::\n\n\n위 코드의 실행결과는 다음과 같습니다.\n\n<img src='img/shiny2.png' width = 500>\n\n\n# 정리\n\n- 만족도 설문조사 등에서 많이 활용되는 **\"순서가 있는 카테고리형\"** 답안을 표현하는 것은 다른 시각화와 살짝 결이 다르다.\n- `likert` 패키지를 활용하여 likert chart를 그릴 수 있다.\n- density plot, heatmap 등도 같이 활용 가능하며, `center`를 포함한 옵션을 설정할 수 있다.\n- `group`을 할당하여 구분 짓는 것도 가능하다.\n- `shiny`, `quarto`, `plotly`등 다른 패키지와도 연동이 가능하다.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
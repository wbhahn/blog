{
  "hash": "358162a961cf39492182a1bded2c41d1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Wald Confidence Interval for a Difference of Binomial Proportions Based on Paired Data\"\ndescription: |\n  Paired data에서 wald 신뢰 구간을 구하는 방법을 통해 민감도와 특이도의 신뢰 구간을 구하는 방법을 소개합니다.\n  \nimage: img/main2.jpg\ncategories:\n  - R\n  - statistics\nauthor:\n  - name: Hyojong Myung\n    url: https://github.com/MyungHyojong\nfig_width: 400\ndate: 2024-08-26\nformat: html\nexecute:\n  freeze: true\ndraft: false\nlicense: CC BY-NC\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n2x2 table에서 민감도와 특이도는 본래 McNemar's test를 통해\n$z = \\frac{(f_{21} - f_{12})}{\\sqrt{f_{12} + f_{21}}}$로 정의된 z값의\np-value를 확인하는 방법으로 진행되었습니다. 하지만 위 방식으로는\n민감도와 특이도의 신뢰 구간에 대한 정보를 알 수 없기에, 신뢰 구간까지\n정할 수 있는 방법인 Wald confidence interval을 적용함으로써 더 많은\n정보를 얻을 수 있습니다.\n\n# 개요\n\n이 문서에서는 진단 테스트 1과 테스트 2의 민감도 차이를 기반으로 신뢰\n구간(CI)을 계산하는 방법을 다룹니다. 이를 위해 두 테스트의 결과를\n기반으로 2x2 테이블을 구성하고, 각 민감도를 계산합니다. 최종적으로 두\n민감도의 차이에 대한 신뢰 구간을 계산하는 수식을 도출합니다.\n\n# 1. 기본 개념\n\n각 테스트의 민감도 $p_1$과 $p_2$는 아래와 같이 정의됩니다:\n\n-   $p_1$은 테스트 1이 진정한 양성을 탐지한 비율입니다.\n-   $p_2$은 테스트 2가 진정한 양성을 탐지한 비율입니다.\n\n2x2 테이블은 아래와 같이 구성될 수 있습니다:\n\n\n```{=tex}\n\\begin{array}{c|c|c|c}\n & \\text{Test 2 Positive} & \\text{Test 2 Negative} & \\text{Total} \\\\\n\\hline\n\\text{Test 1 Positive} & a & b & a + b \\\\\n\\hline\n\\text{Test 1 Negative} & c & d & c + d \\\\\n\\hline\n\\text{Total} & a + c & b + d & n \\\\\n\\end{array}\n```\n\n여기서 각 테스트의 민감도는 다음과 같이 계산됩니다.(특이도 역시 모든\n데이터들이 양성인 것을 음성으로 바꾸어 생각하면 아래 과정이\n동일해집니다)\n\n$$p_1 = \\frac{a + b}{n}, \\quad p_2 = \\frac{a + c}{n}$$\n\n# 2. 신뢰 구간의 도출\n\n두 민감도의 차이에 대한 신뢰 구간을 계산하기 위해 Wald 방법을 사용할 수\n있습니다. Wald 신뢰 구간은 아래와 같이 정의됩니다:\n\n## 2.1. 분산의 기본 식\n\n두 확률 변수 $p_1$과 $p_2$의 차이의 분산은 다음과 같이 계산됩니다:\n\n$$\n\\text{Var}(p_2 - p_1) = \\text{Var}(p_2) + \\text{Var}(p_1) - 2\\text{Cov}(p_2, p_1)\n$$\n\n## 2.2. 각 분산의 계산\n\n우리는 $p_1$과 $p_2$를 비율로 간주할 수 있습니다. 이 비율들의 분산은\n다음과 같이 계산됩니다:\n\n$$\n\\text{Var}(p_1) = \\frac{p_1(1 - p_1)}{n} = \\frac{p_{12} + p_{11}}{n} \\cdot \\left(1 - \\frac{p_{12} + p_{11}}{n}\\right)\n$$\n\n$$\n\\text{Var}(p_2) = \\frac{p_2(1 - p_2)}{n} = \\frac{p_{21} + p_{11}}{n} \\cdot \\left(1 - \\frac{p_{21} + p_{11}}{n}\\right)\n$$\n\n## 2.3. 공분산 $\\text{Cov}(p_2, p_1)$ 의 계산\n\n$p_2$ 와 $p_1$ 의 공분산은 다음과 같이 정의됩니다:\n\n$$\n\\text{Cov}(p_2, p_1) = \\text{Cov}(p_{11} + p_{21}, p_{11} + p_{12})\n$$\n\n이를 확장하면 다음과 같은 네 가지 항으로 분리할 수 있습니다:\n\n$$\n\\text{Cov}(p_2, p_1) = \\text{Cov}(p_{11}, p_{11}) + \\text{Cov}(p_{11}, p_{12}) + \\text{Cov}(p_{21}, p_{11}) + \\text{Cov}(p_{21}, p_{12})\n$$\n\n공분산은 다음과 같이 정리할 수 있습니다.\n\n$$\n\\text{Var}(p_{11}) = \\frac{p_{11}(1 - p_{11})}{n}\n$$\n\n$$\n\\text{Cov}(p_{11}, p_{12}) = -\\frac{p_{11}p_{12}}{n}\n$$\n\n$$\n\\text{Cov}(p_{11}, p_{21}) = -\\frac{p_{11}p_{21}}{n}\n$$\n\n$$\n\\text{Cov}(p_{21}, p_{12}) = -\\frac{p_{21}p_{12}}{n}\n$$\n\n이를 바탕으로 $\\text{Cov}(p_2, p_1)$를 계산하면:\n\n$$\n\\text{Cov}(p_2, p_1) = \\frac{p_{11}(1 - p_{11} - p_{12} - p_{21}) - p_{21}p_{12}}{n}\n$$\n\n여기서 $p_{11} + p_{12} + p_{21} + p_{22} = 1$임을 이용하여, 공분산을\n다음과 같이 단순화할 수 있습니다:\n\n$$\n\\text{Cov}(p_2, p_1) = \\frac{p_{11}p_{22} - p_{21}p_{12}}{n}\n$$\n\n## 2.4. 최종적으로 $\\text{Var}(p_2 - p_1)$ 의 유도\n\n이제 분산 공식을 대입하여 최종적으로 $p_2 - p_1$의 분산을 계산합니다:\n\n$$\n\\text{Var}(p_2 - p_1) = \\text{Var}(p_2) + \\text{Var}(p_1) - 2\\text{Cov}(p_2, p_1)\n$$\n\n따라서 $p_2 - p_1$의 분산은 다음과 같습니다:\n\n$$\n\\text{Var}(p_2 - p_1) = \\frac{(p_{12} + p_{21}) - (p_{21} - p_{12})^2/n}{n} \n$$\n\n$$\n\\text{Var}(p_2 - p_1) = \\frac{(b + c) - (b - c)^2/n}{n} \n$$\n\n이를 적용한 민감도의 차이에 대한 신뢰 구간은 다음과 같이 계산됩니다. $$\n\\ CI_{1-\\alpha/2}(\\hat{\\theta}) = \\left[ \\hat{\\theta} \\pm z_{1-\\alpha/2} \\cdot \\frac{1}{n} \\cdot \\sqrt{b + c - \\frac{(b - c)^2}{n}} \\right] \\\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  if ( (ci.method == \"wald\") & (cont.corr == FALSE) ) {\n    # sensitivity\n    b <- tab$diseased[1,2]; c <- tab$diseased[2,1]; n <- tab$diseased[3,3]\n    sens.diff.se <- sqrt((b+c) - ((b-c)**2) / n) / n\n    sens.diff.cl <- sens.diff + c(-1,1) * qnorm(1-alpha/2) * sens.diff.se}\n```\n:::\n\n\n만약 이항분포로 얻어진 값을 정규분포에 맞도록 조정하기 위해 continuity\ncorrection을 진행한다면 wald에서는 확률 $p$ 하나당 $\\frac{1}{2n}$만큼\n분산을 늘려, 아래와 같은 값을 갖게 된다.\n\n$$\nCI_{1-\\alpha/2}(\\hat{\\theta}) = \\left[ \\hat{\\theta} \\pm \\left( z_{1-\\alpha/2} \\cdot \\frac{1}{n} \\sqrt{b + c - \\frac{(b - c)^2}{n} }+ \\frac{1}{n} \\right) \\right].\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  if ( (ci.method == \"wald\") & (cont.corr == TRUE) ) {\n    # sensitivity\n    b <- tab$diseased[1,2]; c <- tab$diseased[2,1]; n <- tab$diseased[3,3]\n    sens.diff.se <- (sqrt((b+c) - ((b-c)**2) / n) / n) + 1/n\n    sens.diff.cl <- sens.diff + c(-1,1) * qnorm(1-alpha/2) * sens.diff.se}\n```\n:::\n\n\n# 3. Wald 이외 신뢰구간 계산 방법\n\n## 3.1. Agresti 신뢰 구간(Agresti CI)\n\nWald 신뢰 구간을 수정한 방법 중 하나로, 샘플 크기에 특정 상수를 더한 후\n위 wald와 같은 방식으로 전체 샘플 크기 𝑛에 1에서 4까지의 상수를 더한 후\n이 방법들을 비교했습니다. 그 결과, n+2를 사용하는 것이 표준 Wald 신뢰\n구간과 비교했을 때 표본 증가의 효과로 신뢰 구간의 성능(coverage\nprobability)을 향상시킴을 확인했습니다. $$\n\\ CI_{1-\\alpha/2}(\\hat{\\theta}) = \\left[ \\hat{\\theta} \\pm z_{1-\\alpha/2} \\cdot \\frac{1}{n+2} \\cdot \\sqrt{(b+0.5) + (c+0.5) - \\frac{(b - c)^2}{n+2}} \\right] \\\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  if (ci.method == \"agresti-min\") {\n    k <- 0.5\n    # sensitivity    \n    b <- tab$diseased[1,2]+k; c <- tab$diseased[2,1]+k; n <- tab$diseased[3,3]+4*k\n    sens.diff.se <- (sqrt((b+c) - ((b-c)**2) / n) / n) \n    sens.diff.cl <- sens.diff + c(-1,1) * qnorm(1-alpha/2) * sens.diff.se}\n```\n:::\n\n\n## 3.2. Tango\n\nTango는 귀무가설과 함수는 두 비율 간의 차이와, 주어진 정보 행렬($b$,\n$c$, $n$)을 기반으로 likelihood를 계산해 신뢰구간을 계산하는 방법입니다.\nR에서는 `scoreci.mp`라는 별도의 함수를 사용해 진행합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  if (ci.method == \"tango\") {\n    # sensitivity    \n    b <- tab$diseased[1,2]; c <- tab$diseased[2,1]; n <- tab$diseased[3,3]\n    tango <- scoreci.mp(b, c, n, conf.level=1-alpha)    \n    sens.diff.se <- NA    \n    sens.diff.cl <- sort(c(tango$conf.int[1], tango$conf.int[2]))\n    if ( (tango$conf.int[1] > sens.diff) | (tango$conf.int[2] < sens.diff))\n      sens.diff.cl <- sort(-1*sens.diff.cl)}\n```\n:::\n\n\n# 4. 예시 코드\n\n## 4.1. 일반적인 민감도, 특이도 검정\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DTComPair)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: PropCIs\n```\n\n\n:::\n\n```{.r .cell-code}\nt1 <- read.tab.paired(18, 14, 0, 18,\n                      18, 12, 2, 18)\nt1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTwo binary diagnostic tests (paired design)\n\nTest1: 'Noname 1'\nTest2: 'Noname 2'\n\nDiseased:\n           Test1 pos. Test1 neg. Total\nTest2 pos.         18         14    32\nTest2 neg.          0         18    18\nTotal              18         32    50\n\nNon-diseased:\n           Test1 pos. Test1 neg. Total\nTest2 pos.         18         12    30\nTest2 neg.          2         18    20\nTotal              20         30    50\n```\n\n\n:::\n\n```{.r .cell-code}\nsesp.diff.ci(t1, ci.method=\"wald\", cont.corr=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$sensitivity\n     test1      test2       diff    diff.se   diff.lcl   diff.ucl \n0.36000000 0.64000000 0.28000000 0.06349803 0.15554615 0.40445385 \n\n$specificity\n      test1       test2        diff     diff.se    diff.lcl    diff.ucl \n 0.60000000  0.40000000 -0.20000000  0.06928203 -0.33579029 -0.06420971 \n\n$ci.method\n[1] \"wald\"\n\n$alpha\n[1] 0.05\n\n$cont.corr\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nsesp.diff.ci(t1, ci.method=\"wald\", cont.corr=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$sensitivity\n     test1      test2       diff    diff.se   diff.lcl   diff.ucl \n0.36000000 0.64000000 0.28000000 0.08349803 0.11634687 0.44365313 \n\n$specificity\n      test1       test2        diff     diff.se    diff.lcl    diff.ucl \n 0.60000000  0.40000000 -0.20000000  0.08928203 -0.37498957 -0.02501043 \n\n$ci.method\n[1] \"wald\"\n\n$alpha\n[1] 0.05\n\n$cont.corr\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nsesp.diff.ci(t1, ci.method=\"agresti-min\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$sensitivity\n     test1      test2       diff    diff.se   diff.lcl   diff.ucl \n0.36000000 0.64000000 0.28000000 0.06444681 0.15368658 0.40631342 \n\n$specificity\n      test1       test2        diff     diff.se    diff.lcl    diff.ucl \n 0.60000000  0.40000000 -0.20000000  0.06954236 -0.33630053 -0.06369947 \n\n$ci.method\n[1] \"agresti-min\"\n\n$alpha\n[1] 0.05\n\n$cont.corr\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nsesp.diff.ci(t1, ci.method=\"tango\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$sensitivity\n    test1     test2      diff   diff.se  diff.lcl  diff.ucl \n0.3600000 0.6400000 0.2800000        NA 0.1747417 0.4166512 \n\n$specificity\n      test1       test2        diff     diff.se    diff.lcl    diff.ucl \n 0.60000000  0.40000000 -0.20000000          NA -0.34470882 -0.06111243 \n\n$ci.method\n[1] \"tango\"\n\n$alpha\n[1] 0.05\n\n$cont.corr\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n아래와 같은 방법으로 answer, test1, test2를 열로 가지고, 각 결과\n데이터가 1,0(1은 diseased sample, 2는 non-diseased sample)로 표시되어\n있는 경우에는 바로 paired table을 제작할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DTComPair)\ntb <- tab.paired(answer, test1, test2, data = na.omit(sample_data))\n```\n:::\n\n\n## 4.2. 민감도, 특이도의 비열등성 검정\n\n어떤 테스트의 민감도와 특이도가 대조 테스트에 비해 떨어지지 않는다는\n것을 확인하기 위해서는 비열등성 검정을 사용해야 합니다. 이 때는\n`sesp.diff.ci` 함수를 통해 구한 standard error 값과 두 민감도/특이도의\n차이를 통해 p value를 계산합니다. 아래 예시에서는 민감도에 대한 비열등성\n마진(`sens_margin`)을 5%, 특이도에 대한 비열등성 마진(`spec_margin`)을\n10%로 설정했습니다.\\\n민감도를 예로 들자면 귀무가설은 아래와 같고, 아래 수식에 따라 p value를\n계산합니다.\n\n$$H_0 \\colon \\text{test1 sensitivity} - \\text{test2 sensitivity} \\leq -\\text{ sensitivity margin}$$\n$$p-value = 1 - Φ\\left(\\frac{\\text{test1 sensitivity} - \\text{test2 sensitivity} + \\text{sensitivity margin}}{\\text{sensitivity diff.SE}}\\right)$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DTComPair)\nt1 <- read.tab.paired(18, 14, 0, 18,\n                      18, 12, 2, 18)\nt1.wald <- sesp.diff.ci(t1, ci.method=\"wald\", cont.corr=FALSE)\n\nsens_margin <-  0.05\nspec_margin <-  0.1\n\np_value_sensitivity <- pnorm((t1.wald$sensitivity['diff'] + sens_margin) / t1.wald$sensitivity['diff.se'], lower.tail = FALSE)\np_value_specificity <- pnorm((t1.wald$specificity['diff'] + spec_margin) / t1.wald$specificity['diff.se'], lower.tail = FALSE)\np_value_sensitivity\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        diff \n1.012589e-07 \n```\n\n\n:::\n\n```{.r .cell-code}\np_value_specificity\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     diff \n0.9255427 \n```\n\n\n:::\n:::\n\n\n따라서 민감도에 대해서는 위 귀무가설이 기각 되었음으로 test1의 민감도가\ntest2보다 열등하지 않다고 말할 수 있지만, 특이도에 대해서는 귀무가설이\n기각되지 않았기 때문에 test1의 특이도가 test2에 비해 열등하지 않다는\n결론을 내릴 수 없습니다.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}